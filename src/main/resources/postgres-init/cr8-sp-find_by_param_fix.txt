DROP FUNCTION
IF
	EXISTS sp_find_by_param;
CREATE
	OR REPLACE FUNCTION sp_find_by_param(
	c_page INT,
	 c_size INT,
	  c_sort VARCHAR,
	   c_sort_by VARCHAR,
	    c_column VARCHAR ,
	    c_value VARCHAR
	   )
		 RETURNS SETOF mst_contoh  AS $$
		 DECLARE v_main TEXT;
		 DECLARE v_col TEXT;
		 DECLARE v_col_order TEXT;
		 DECLARE v_sort TEXT;
		 DECLARE v_query TEXT;
		 DECLARE v_offset INT;
		 BEGIN
		v_main := 'SELECT * FROM mst_contoh WHERE ';
		v_col := CASE LOWER(c_column)
		WHEN 'int' THEN 'CAST(contoh_int AS TEXT)'
		WHEN 'double' THEN 'CAST(contoh_double AS TEXT)'
		WHEN 'boolean' THEN 'CAST(contoh_boolean as TEXT)'
		WHEN 'float' THEN 'CAST(contoh_float as TEXT)'
		WHEN 'string' THEN 'contoh_string'
        ELSE 'CAST(id AS TEXT)'
		END ;
		v_col_order := CASE LOWER(c_sort_by)
		WHEN 'int' THEN 'contoh_int'
		WHEN 'double' THEN 'contoh_double'
		WHEN 'boolean' THEN 'contoh_boolean'
		WHEN 'float' THEN 'contoh_float'
		WHEN 'string' THEN 'contoh_string'
        ELSE 'id'
		END;
		v_sort := CASE LOWER(c_sort) WHEN 'asc' THEN 'ASC' ELSE 'DESC' END;
		v_offset := c_page * c_size;
		v_query := concat(v_main,' ',v_col,' LIKE  ',CHR(39),'%',c_value,'%',CHR(39),' ORDER BY ',v_col_order, ' ',v_sort, ' LIMIT ',c_size, ' OFFSET (',v_offset,') ');
RETURN QUERY EXECUTE(v_query);

-- 	c_size OFFSET ( c_page * c_size );
	END; $$ LANGUAGE 'plpgsql';